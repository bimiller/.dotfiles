
# Default tool settings.

export PS1="\W \$ "
#export EDITOR='subl -w'
#export EDITOR="mvim -f -c \"au VimLeave * maca hide:\""
#export EDITOR="emacs -nw"
export ALTERNATE_EDITOR=emacs
export EDITOR=emacsclient
export VISUAL="$EDITOR"
export LESS="-R"
export PAGER=less

# Use Homebrew utils instead of ancient Mac versions.

if [ -d "/usr/local/opt/coreutils/libexec/gnubin" ]; then
    export PATH="/usr/local/opt/coreutils/libexec/gnubin:${PATH}"
    export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:/usr/local/share/man:${MANPATH-/usr/share/man}"
fi

if [ -d "/usr/local/opt/findutils/libexec/gnubin" ]; then
    export PATH="/usr/local/opt/findutils/libexec/gnubin:${PATH}"
    export MANPATH="/usr/local/opt/findutils/libexec/gnuman:/usr/local/share/man:${MANPATH-/usr/share/man}"
fi

if [ -d "/Applications/MacVim.app/Contents/bin" ]; then
    export PATH="/Applications/MacVim.app/Contents/bin:${PATH}"
fi

# Enable Bash completions when using Homebrew Bash

if [ -f /usr/local/etc/bash_completion ]; then
    source /usr/local/etc/bash_completion
fi

# Python development settings.

if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"              # insert pyenv shims into PATH
    eval "$(pyenv virtualenv-init -)"   # include virtualenv support

#    export PYTHON_CONFIGURE_OPTS="--enable-shared"     # required for many (gui) modules

    #export PYENV_VIRTUALENV_DISABLE_PROMPT=1
fi

export PIP_REQUIRE_VIRTUALENV=true

export PIPENV_DEFAULT_PYTHON_VERSION="3.6"

export NLTK_DATA="~/Documents/Datasets/nltk_data"

# Java development settings.

if [ $(uname -s) == "Darwin" ]; then
    export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
else
    export JAVA_HOME=/opt/jdk1.8.0_60
fi

if [ -d "${JAVA_HOME}/bin" ] ; then
    export PATH="${PATH}:${JAVA_HOME}/bin"
fi

# Set PATH so it includes user's private bin if it exists.

if [ -d "${HOME}/bin" ] ; then
  export PATH="${PATH}:${HOME}/bin"
fi

# Private settings (not shared on GitHub).

if [ -f "${HOME}/.profile_private" ]; then
  source "${HOME}/.profile_private"
fi

# If running bash then source the bashrc file.

if [ -n "${BASH_VERSION}" ]; then
  if [ -f "${HOME}/.bashrc" ]; then
    source "${HOME}/.bashrc"
  fi
fi

